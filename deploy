# #####################################################
#
# Name file: app.sh
# Made by: 
#    - Juan Sebastian Reyes Leyton
#
# Version: 1.7
# Branch: Master
#
# #######################################################

INST=$1
ARGS=$2

options () {
    echo -e " COMMANDS  \t ARGUMENTS         \t DESCRIPTION "
    echo -e " start     \t                   \t Deploy the project"
    echo -e " destroy   \t                   \t Destroy the project"
    echo -e " status    \t                   \t Show the project services status"
    echo -e " connect   \t container name    \t Connect to specific server"
    echo -e " logs      \t container name    \t Show the server logs"
}

start () {
    echo "Deploy project:"
    pushd ~/Documents/Tesis/server
    sudo docker-compose build
    sudo docker-compose up -d
    echo -e "[+] System status: Built.\n"
    echo -e "Services status:"
    sudo docker ps -a
    popd
}

destroy () {
    echo "Destroy system:"
    pushd ~/Documents/Tesis/server
    echo -e "[+] Removing services"
    sudo docker-compose down 
    sudo docker image rm mmapi rsfront
    sudo docker volume prune --force
    
    echo -e "[+] Removing backend db folders"
    cd backend/src/db
    rm -r *
    popd
}

status () {
    echo "Services status:"
    sudo docker ps -a
}

connect () {
    echo "Connect to server $1:"
    sudo docker exec -it $1 /bin/bash
}

logs () {
    echo "Server $1 logs:"
    sudo docker logs $1 -f
}

main () {
    
    if [[ "$INST" == "start" ]]; then
        start
    elif [[ "$INST" == "destroy" ]]; then
        destroy
    elif [[ "$INST" == "status" ]]; then
        status
    elif [[ "$INST" == "connect" ]]; then
        connect $ARGS
    elif [[ "$INST" == "logs" ]]; then
        logs $ARGS
    else
        options
    fi
}

main